% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql.R
\name{loadDF}
\alias{loadDF}
\title{Load
Load a named dataframe from a database, where it is stored in decomposed form:
\itemize{
\item a named table with a dumbed-down version of the dataframe, where logicals are
coerced to integers, and factors are coerced to strings.
\item a metadata table called \verb{__types}, with the information necessary to
recover the logicals and factors in the original dataframe.
The dataframe can be saved back to the database using \code{\link[=saveDF]{saveDF()}}.
}}
\usage{
loadDF(con, name)
}
\arguments{
\item{con}{An SQL database connection (generated via \code{\link[DBI:dbConnect]{DBI::dbConnect()}}).}

\item{name}{The name of the table to load from the database.}
}
\description{
Load
Load a named dataframe from a database, where it is stored in decomposed form:
\itemize{
\item a named table with a dumbed-down version of the dataframe, where logicals are
coerced to integers, and factors are coerced to strings.
\item a metadata table called \verb{__types}, with the information necessary to
recover the logicals and factors in the original dataframe.
The dataframe can be saved back to the database using \code{\link[=saveDF]{saveDF()}}.
}
}
\examples{
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")

df <- tibble::tibble(
  a = factor(c("a", "a", "b"), levels = c("a", "b"), ordered = TRUE),
  b = c(TRUE, TRUE, FALSE),
  c = c(1,2,3)
 )

saveDF(con, df, "test_1")

loadDF(con, "test_1")

DBI::dbDisconnect(con)
}
\seealso{
Pure functions to decompose/recompose dataframes: \code{\link[=decomposeDF]{decomposeDF()}} \code{\link[=recomposeDF]{recomposeDF()}}
}
